pipeline {
  agent any 
 tools {
    maven 'maven'
    } 
  stages {
    stage('Checkout') {
    environment {
        GIT_CREDENTIALS = credentials('GIT_CREDENTIALS')
    }
      steps {
        sh 'echo passed'
        
        git branch: 'main', credentialsId: GIT_CREDENTIALS, url: 'https://github.com/deleonab/java-maven-sonar-argocd-helm-kubernetes.git'
      }
    }
  stage('Build Artifact') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean install'
      }
    }

    stage('Unit Test') {
      steps {
        
        // build the project and create a JAR file
        sh 'mvn test'
      }
    }


    stage('Integration Test') {
      steps {
        
        // build the project and create a JAR file
        sh 'mvn test'
      }
    }  

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://http://23.23.236.172/:9000"
        SONARQUBE_TOKEN = credentials('SONARQUBE_JENKINS')
    

      }
      steps {
        script {
          sh 'mvn sonar:sonar -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
      stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "deleonabowu/my-cicd-image:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "Dockerfile"
        REGISTRY_CREDENTIALS = credentials('JENKINS_DOCKER')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "JENKINS_DOCKER") {
                dockerImage.push()
            }
        }
      }
    }

/*
stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "java-maven-sonar-argocd-helm-kubernetes"
            GIT_USER_NAME = "deleonab"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) 
              //withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GIT_USERNAME', passwordVariable: 'github-token')])
            {
                sh '''
                    git config user.email "delesodade@hotmail.com"
                    git config user.name "Dele Onabowu"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                    git add spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
*/
    }
    
  }

//withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GIT_USERNAME', passwordVariable: 'github-token')]) {
    // Use the credentials in your Git URL or other operations

