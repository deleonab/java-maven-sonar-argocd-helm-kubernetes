pipeline {
  agent any 
 tools {
    maven 'maven'
    } 
  stages {
    stage('Checkout') {
    environment {
        GIT_CREDENTIALS = credentials('GIT_CREDENTIALS')
    }
      steps {
        sh 'echo passed'
        
        git branch: 'main', credentialsId: GIT_CREDENTIALS, url: 'https://github.com/deleonab/java-maven-sonar-argocd-helm-kubernetes.git'
      }
    }
  stage('Build Artifact') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean install'
      }
    }

    stage('Unit Test') {
      steps {
        
        // build the project and create a JAR file
        sh 'mvn test'
      }
    }


    stage('Integration Test') {
      steps {
        
        // build the project and create a JAR file
        sh 'mvn test'
      }
    }  

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://52.54.159.242:9000"
        SONARQUBE_TOKEN = credentials('sonarQube_jenkins')
    

      }
      steps {
        script {
          sh 'mvn sonar:sonar -Dsonar.login=$SONARQUBE_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
      stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "deleonabowu/my-cicd-image:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "Dockerfile"
        REGISTRY_CREDENTIALS = credentials('jenkins_docker')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "jenkins_docker") {
                dockerImage.push()
            }
        }
      }
    }
    }
  }

